/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Aryan Singh
 */

import com.mysql.cj.xdevapi.Statement;
import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
public class moiverec extends javax.swing.JFrame {

    Connection con;
    
    
    public moiverec() {
        initComponents();      
        String url = "jdbc:mysql://localhost:3306/moiverec";
        String user="root";
        String pass="aryansingh";
        try{
            con = DriverManager.getConnection(url,user,pass);
        }catch(Exception ex){
            System.out.println("Error :" + ex.getMessage());
        }
        
    }
    
    public Connection getConnection(){
        
        
        String url = "jdbc:mysql://localhost:3306/moiverec";
        String user="root";
        String pass="aryansingh";
        try{
            con = DriverManager.getConnection(url,user,pass);
        }catch(Exception ex){
            System.out.println("Error :" + ex.getMessage());
        }
        
          
    return con;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        leftpanel = new javax.swing.JPanel();
        home = new javax.swing.JButton();
        moiverec = new javax.swing.JButton();
        list = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        welcomscr = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        randscr = new javax.swing.JPanel();
        FetchMoive = new javax.swing.JButton();
        filterbtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        moiverectbl = new javax.swing.JTable();
        moivetext = new javax.swing.JTextField();
        genretext = new javax.swing.JTextField();
        ratingtext = new javax.swing.JTextField();
        alerttext = new javax.swing.JLabel();
        releasetext = new javax.swing.JTextField();
        savebtn = new javax.swing.JButton();
        listscr = new javax.swing.JPanel();
        delbtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        mylisttbl = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        leftpanel.setBackground(new java.awt.Color(153, 204, 255));

        home.setText("Home");
        home.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homeMouseClicked(evt);
            }
        });

        moiverec.setText("Random Moive");
        moiverec.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                moiverecMouseClicked(evt);
            }
        });

        list.setText("My List");
        list.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listMouseClicked(evt);
            }
        });
        list.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout leftpanelLayout = new javax.swing.GroupLayout(leftpanel);
        leftpanel.setLayout(leftpanelLayout);
        leftpanelLayout.setHorizontalGroup(
            leftpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(moiverec, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
            .addComponent(list, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(home, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
        );
        leftpanelLayout.setVerticalGroup(
            leftpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, leftpanelLayout.createSequentialGroup()
                .addGap(148, 148, 148)
                .addComponent(home, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(moiverec, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(list, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(73, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        welcomscr.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Welcome");

        javax.swing.GroupLayout welcomscrLayout = new javax.swing.GroupLayout(welcomscr);
        welcomscr.setLayout(welcomscrLayout);
        welcomscrLayout.setHorizontalGroup(
            welcomscrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, welcomscrLayout.createSequentialGroup()
                .addContainerGap(137, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(133, 133, 133))
        );
        welcomscrLayout.setVerticalGroup(
            welcomscrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(welcomscrLayout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(136, Short.MAX_VALUE))
        );

        randscr.setBackground(new java.awt.Color(153, 153, 255));

        FetchMoive.setText("Random Moive");
        FetchMoive.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FetchMoiveMouseClicked(evt);
            }
        });
        FetchMoive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FetchMoiveActionPerformed(evt);
            }
        });

        filterbtn.setText("Filter");
        filterbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                filterbtnMouseClicked(evt);
            }
        });
        filterbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterbtnActionPerformed(evt);
            }
        });

        moiverectbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Moive", "Genre", "Ratings ", "Realse Date "
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        moiverectbl.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                moiverectblFocusGained(evt);
            }
        });
        moiverectbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                moiverectblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(moiverectbl);

        moivetext.setForeground(new java.awt.Color(102, 102, 102));
        moivetext.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        moivetext.setText("Enter Moive Name");
        moivetext.setToolTipText("");
        moivetext.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                moivetextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                moivetextFocusLost(evt);
            }
        });
        moivetext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moivetextActionPerformed(evt);
            }
        });

        genretext.setForeground(new java.awt.Color(102, 102, 102));
        genretext.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        genretext.setText("Enter Genre");
        genretext.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                genretextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                genretextFocusLost(evt);
            }
        });
        genretext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genretextActionPerformed(evt);
            }
        });

        ratingtext.setForeground(new java.awt.Color(102, 102, 102));
        ratingtext.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ratingtext.setText("Enter Ratings");
        ratingtext.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ratingtextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ratingtextFocusLost(evt);
            }
        });
        ratingtext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ratingtextActionPerformed(evt);
            }
        });

        alerttext.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        alerttext.setForeground(new java.awt.Color(255, 51, 51));
        alerttext.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        alerttext.setText("Given Data in not in the table");

        releasetext.setForeground(new java.awt.Color(102, 102, 102));
        releasetext.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        releasetext.setText("Enter Date");
        releasetext.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                releasetextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                releasetextFocusLost(evt);
            }
        });
        releasetext.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                releasetextMouseClicked(evt);
            }
        });
        releasetext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                releasetextActionPerformed(evt);
            }
        });

        savebtn.setText("Save");
        savebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                savebtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout randscrLayout = new javax.swing.GroupLayout(randscr);
        randscr.setLayout(randscrLayout);
        randscrLayout.setHorizontalGroup(
            randscrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, randscrLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(randscrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(savebtn, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(filterbtn, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(274, 274, 274))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, randscrLayout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addGroup(randscrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, randscrLayout.createSequentialGroup()
                        .addComponent(FetchMoive, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(245, 245, 245))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, randscrLayout.createSequentialGroup()
                        .addComponent(alerttext, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, randscrLayout.createSequentialGroup()
                        .addGroup(randscrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(randscrLayout.createSequentialGroup()
                                .addComponent(moivetext, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44)
                                .addComponent(genretext, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ratingtext, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(releasetext, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(61, 61, 61))))
        );
        randscrLayout.setVerticalGroup(
            randscrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(randscrLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(FetchMoive)
                .addGap(34, 34, 34)
                .addGroup(randscrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(moivetext, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(genretext, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ratingtext, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(releasetext, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(filterbtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(alerttext)
                .addGap(4, 4, 4)
                .addComponent(savebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                .addGap(46, 46, 46))
        );

        listscr.setBackground(new java.awt.Color(255, 153, 153));
        listscr.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listscrMouseClicked(evt);
            }
        });

        delbtn.setText("Delete");
        delbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                delbtnMouseClicked(evt);
            }
        });
        delbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delbtnActionPerformed(evt);
            }
        });

        mylisttbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Moive", "Genre", "Realse Date ", "Ratings "
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        mylisttbl.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                mylisttblFocusGained(evt);
            }
        });
        mylisttbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mylisttblMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(mylisttbl);
        if (mylisttbl.getColumnModel().getColumnCount() > 0) {
            mylisttbl.getColumnModel().getColumn(0).setResizable(false);
            mylisttbl.getColumnModel().getColumn(1).setResizable(false);
            mylisttbl.getColumnModel().getColumn(2).setResizable(false);
            mylisttbl.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout listscrLayout = new javax.swing.GroupLayout(listscr);
        listscr.setLayout(listscrLayout);
        listscrLayout.setHorizontalGroup(
            listscrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listscrLayout.createSequentialGroup()
                .addContainerGap(83, Short.MAX_VALUE)
                .addGroup(listscrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listscrLayout.createSequentialGroup()
                        .addComponent(delbtn)
                        .addGap(268, 268, 268))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listscrLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72))))
        );
        listscrLayout.setVerticalGroup(
            listscrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listscrLayout.createSequentialGroup()
                .addContainerGap(156, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(delbtn)
                .addGap(138, 138, 138))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(welcomscr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(randscr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 1, Short.MAX_VALUE)))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(listscr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 3, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(welcomscr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(randscr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(listscr, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(leftpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(leftpanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    
    /*------------------------------------------------ OUR CODE -------------------------------------------------------------------------------------------------------*/
    /*------------------------------------------------ OUR CODE -------------------------------------------------------------------------------------------------------*/
    /*------------------------------------------------ OUR CODE -------------------------------------------------------------------------------------------------------*/
    /*------------------------------------------------ OUR CODE -------------------------------------------------------------------------------------------------------*/
    /*------------------------------------------------ OUR CODE -------------------------------------------------------------------------------------------------------*/
    /*------------------------------------------------ OUR CODE -------------------------------------------------------------------------------------------------------*/
    
    

    private void moiverecMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_moiverecMouseClicked

    randscr.setVisible(true);
    welcomscr.setVisible(false);
    listscr.setVisible(false);

    alerttext.setVisible(false);
    
    savebtn.setVisible(false);
    }//GEN-LAST:event_moiverecMouseClicked
    
    
    
    private void listMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listMouseClicked
    randscr.setVisible(false);
    welcomscr.setVisible(false);
    listscr.setVisible(true);
    
    DefaultTableModel newmodel = (DefaultTableModel) mylisttbl.getModel();
    newmodel.setRowCount(0);
    
     String sql = "select * from mylist ORDER BY RAND()";
        System.out.println(sql);
                
        try{
            PreparedStatement pst = con.prepareStatement(sql);
            ResultSet rs  = pst.executeQuery();
            while(rs.next()){
            newmodel.addRow( new String[]{rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)} );
            }
        }
        catch(Exception ex ){
            System.out.println("Error" + ex.getMessage());
        }
    
    
    }//GEN-LAST:event_listMouseClicked

    private void filterbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterbtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filterbtnActionPerformed

    private void FetchMoiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FetchMoiveActionPerformed
        DefaultTableModel newmodel = (DefaultTableModel) moiverectbl.getModel();
        newmodel.setRowCount(0);
        
        
        String sql = "select * from moivedb ORDER BY RAND()";
        try{
            PreparedStatement pst = con.prepareStatement(sql);
            ResultSet rs  = pst.executeQuery();
            DefaultTableModel model = (DefaultTableModel)moiverectbl.getModel();
            
            while(rs.next()){
            model.addRow( new String[]{rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)} );
            }
        }
        catch(Exception ex ){
            System.out.println("Error" + ex.getMessage());
        }
    }//GEN-LAST:event_FetchMoiveActionPerformed

    private void delbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delbtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_delbtnActionPerformed

    private void homeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeMouseClicked
    randscr.setVisible(false);
    welcomscr.setVisible(true);
    listscr.setVisible(false);
    }//GEN-LAST:event_homeMouseClicked

    private void moivetextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moivetextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_moivetextActionPerformed

    private void genretextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genretextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genretextActionPerformed

    private void ratingtextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ratingtextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ratingtextActionPerformed

    private void moivetextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_moivetextFocusGained
        if(moivetext.getText().equals("Enter Moive Name"))
        {
            moivetext.setText("");
            moivetext.setForeground(new Color(0,0,0));
        
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_moivetextFocusGained

    private void genretextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_genretextFocusGained
        if(genretext.getText().equals("Enter Genre"))
        {
            genretext.setText("");
            genretext.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_genretextFocusGained

    private void genretextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_genretextFocusLost
    if(genretext.getText().equals(""))
        {
            genretext.setText("Enter Genre");
            genretext.setForeground(new Color(102,102,102));
        }

// TODO add your handling code here:
    }//GEN-LAST:event_genretextFocusLost

    private void moivetextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_moivetextFocusLost
       if(moivetext.getText().equals(""))
        {
            moivetext.setText("Enter Moive Name");
            moivetext.setForeground(new Color(102,102,102));
        
        }
    }//GEN-LAST:event_moivetextFocusLost

    private void ratingtextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ratingtextFocusGained
        if(ratingtext.getText().equals("Enter Ratings"))
        {
            ratingtext.setText("");
            ratingtext.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_ratingtextFocusGained

    private void ratingtextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ratingtextFocusLost
 if(ratingtext.getText().equals(""))
        {
            ratingtext.setText("Enter Ratings");
            ratingtext.setForeground(new Color(102,102,102));
        }
    }//GEN-LAST:event_ratingtextFocusLost

    private void filterbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filterbtnMouseClicked
        String movtext =moivetext.getText().strip() ; 
        String gentext =genretext.getText().strip();
        String ratetext = ratingtext.getText().strip();
        String reltext = releasetext.getText().strip();
        
        DefaultTableModel newmodel = (DefaultTableModel) moiverectbl.getModel();
        newmodel.setRowCount(0);
        
        
        System.out.println(movtext.strip());
        System.out.println(gentext.strip());
        System.out.println(ratetext.strip());
        
        
        if( movtext.isBlank() && gentext.isBlank() && ratetext.isBlank() && reltext.isBlank() ){
             alerttext.setVisible(true);
        }
        else{
        
        String mov="%"+ movtext +"%";
        String gen="%"+ gentext +"%";
        String rate= ratetext+"%";       
        String date = reltext;
                   
        
        String sql = "SELECT * FROM moivedb where title like '"+ mov +"' or genres like '"+ gen +"' or rating like '"+ rate+"'";
        try{
            PreparedStatement pst = con.prepareStatement(sql);
            ResultSet rs  = pst.executeQuery();
            DefaultTableModel model = (DefaultTableModel)moiverectbl.getModel();
            
            while(rs.next()){
            model.addRow( new String[]{rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)} );
            }
        }
        catch(Exception ex ){
            System.out.println("Error" + ex.getMessage());
        }
        
        
        }
        
        
        
        
        moivetext.setText("Enter Moive Name");
        ratingtext.setText("Enter Ratings");
        genretext.setText("Enter Genre");
        moivetext.setForeground(new Color(102,102,102));
        ratingtext.setForeground(new Color(102,102,102));
        genretext.setForeground(new Color(102,102,102));

        // TODO add your handling code here:
    }//GEN-LAST:event_filterbtnMouseClicked

    private void FetchMoiveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FetchMoiveMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_FetchMoiveMouseClicked

    private void releasetextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_releasetextFocusGained
    if(releasetext.getText().equals("Enter Date"))
        {
            releasetext.setText("");
            releasetext.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_releasetextFocusGained

    private void releasetextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_releasetextFocusLost
    if(releasetext.getText().equals(""))
        {
            releasetext.setText("Enter Date");
            releasetext.setForeground(new Color(102,102,102));
        }
    }//GEN-LAST:event_releasetextFocusLost

    private void releasetextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_releasetextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_releasetextActionPerformed

    private void releasetextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_releasetextMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_releasetextMouseClicked

    private void moiverectblFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_moiverectblFocusGained
    savebtn.setVisible(true);
    slecrow = moiverectbl.getSelectedRow();
    
        // TODO add your handling code here:
    }//GEN-LAST:event_moiverectblFocusGained
    int slecrow;
    
    private void savebtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_savebtnMouseClicked
        //less gooo
        DefaultTableModel model =(DefaultTableModel)moiverectbl.getModel();
//        System.out.println(model.getValueAt(slecrow,0).toString());
//        System.out.println(model.getValueAt(slecrow,1).toString());
//        System.out.println(model.getValueAt(slecrow,2).toString());
//        System.out.println(model.getValueAt(slecrow,3).toString());
        
        String title = model.getValueAt(slecrow,0).toString();
        String genre = model.getValueAt(slecrow,1).toString();
        String rating =  model.getValueAt(slecrow,2).toString();
        String date =   model.getValueAt(slecrow,3).toString(); 
        System.out.println(title);
        System.out.println(genre);
        System.out.println(rating);
        System.out.println(date);
        
       
        
        String sql = "INSERT INTO `mylist` (`title`,`genres`,`rating`,`date`) VALUES( '"+title+"','" +genre+ "','" + rating + "','" +date+ "');";
        try{
            PreparedStatement pst = con.prepareStatement(sql);
            int rs  = pst.executeUpdate();
            
            
        }
        catch(Exception ex ){
            System.out.println("Error" + ex.getMessage());
        }
        
    }//GEN-LAST:event_savebtnMouseClicked

    private void moiverectblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_moiverectblMouseClicked
        DefaultTableModel model =(DefaultTableModel)mylisttbl.getModel();
        slecrowmy = mylisttbl.getSelectedRow();
        
        // TODO add your handling code here:
    }//GEN-LAST:event_moiverectblMouseClicked

    private void listscrMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listscrMouseClicked
        
        
        
       

        // TODO add your handling code here:
    }//GEN-LAST:event_listscrMouseClicked

    private void listActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_listActionPerformed
    int slecrowmy;
    private void delbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_delbtnMouseClicked
        DefaultTableModel mylist =(DefaultTableModel)mylisttbl.getModel();
        
        System.out.println(slecrowmy);
        String title = mylist.getValueAt(slecrowmy,0).toString();
        String genre = mylist.getValueAt(slecrowmy,1).toString();
        String rating =  mylist.getValueAt(slecrowmy,2).toString();
        String date =   mylist.getValueAt(slecrowmy,3).toString(); 
        
        System.out.println(title);
        System.out.println(genre);
        System.out.println(rating);
        System.out.println(date);
        
        
        String sql = "DELETE FROM mylist WHERE title='"+ title +"' and genres='"+ genre +"';";
        try{
            PreparedStatement pst = con.prepareStatement(sql);
            int rs  = pst.executeUpdate();
            
            
        }
        catch(Exception ex ){
            System.out.println("Error" + ex.getMessage());
        }
        
        listMouseClicked(evt);

        // TODO add your handling code here:
    }//GEN-LAST:event_delbtnMouseClicked

    private void mylisttblFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mylisttblFocusGained
        slecrowmy = mylisttbl.getSelectedRow();  
        // TODO add your handling code here:
    }//GEN-LAST:event_mylisttblFocusGained

    private void mylisttblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mylisttblMouseClicked
        DefaultTableModel mylist =(DefaultTableModel)mylisttbl.getModel();
        slecrowmy= mylisttbl.getSelectedRow();  
       
                
// TODO add your handling code here:
    }//GEN-LAST:event_mylisttblMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(moiverec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(moiverec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(moiverec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(moiverec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new moiverec().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton FetchMoive;
    private javax.swing.JLabel alerttext;
    private javax.swing.JButton delbtn;
    private javax.swing.JButton filterbtn;
    private javax.swing.JTextField genretext;
    private javax.swing.JButton home;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel leftpanel;
    private javax.swing.JButton list;
    private javax.swing.JPanel listscr;
    private javax.swing.JButton moiverec;
    private javax.swing.JTable moiverectbl;
    private javax.swing.JTextField moivetext;
    private javax.swing.JTable mylisttbl;
    private javax.swing.JPanel randscr;
    private javax.swing.JTextField ratingtext;
    private javax.swing.JTextField releasetext;
    private javax.swing.JButton savebtn;
    private javax.swing.JPanel welcomscr;
    // End of variables declaration//GEN-END:variables
}
